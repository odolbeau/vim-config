snippet gs "PHP Class Getter / Setter" b
public function get${1/\w+\s*/\u$0/}(): $2
{
    return $this->$1;
}

public function set${1/\w+\s*/\u$0/}(${2:string} $$1): self
{
    $this->$1 = $$1;

    return $this;
}
endsnippet

snippet get "PHP Class Getter" b
public function get${1/\w+\s*/\u$0/}(): ${2:string}
{
    return $this->$1;
}
endsnippet

snippet set "PHP Class Setter" b
public function set${1/\w+\s*/\u$0/}(${2:string} $$1): self
{
    $this->$1 = $$1;

    return $this;
}
endsnippet

snippet has "PHP Class Has* method" b
public function has${1/\w+\s*/\u$0/}(): bool
{
    return $this->$1;
}
endsnippet

snippet is "PHP Class Is* method" b
public function is${1/\w+\s*/\u$0/}(): bool
{
    return $this->$1;
}
endsnippet

snippet c1 "Constructor with 1 argument" b
public function __construct(
    private readonly $1 $$2,
) {
}

${0}
endsnippet

snippet c2 "Constructor with 2 arguments" b
public function __construct(
    private readonly $1 $$2,
    private readonly $3 $$4,
) {
}

${0}
endsnippet

snippet c3 "Constructor with 3 arguments" b
public function __construct(
    private readonly $1 $$2,
    private readonly $3 $$4,
    private readonly $5 $$6,
) {
}

${0}
endsnippet

snippet inherit "Inheritdoc replaced by override annotation" b
#[\Override]${0}
endsnippet

snippet override "Override annotation" b
#[\Override]${0}
endsnippet

snippet usebus "use MessageBusInterface" b
use Symfony\Component\Messenger\MessageBusInterface;${0}
endsnippet

snippet useame "use annotation MapEntity" b
use Symfony\Bridge\Doctrine\Attribute\MapEntity;${0}
endsnippet

snippet uselog "use LoggerInterface statement" b
use Psr\Log\LoggerInterface;${0}
endsnippet

snippet useem "use Doctrine EM statement" b
use Doctrine\ORM\EntityManagerInterface;${0}
endsnippet

snippet useval "Use ValidatorInterface" b
use Symfony\Component\Validator\Validator\ValidatorInterface;${0}
endsnippet

snippet usereq "Use Symfony request & response statement" b
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;${0}
endsnippet

snippet useserial "Use Symfony serializer & co" b
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
use Symfony\Component\Serializer\SerializerInterface;${0}
endsnippet

snippet usevfe "Use Symfony ValidationFailedException" b
use Symfony\Component\Validator\Exception\ValidationFailedException;${0}
endsnippet

snippet usenfe "Use Symfony NotFoundHttpException" b
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
endsnippet

snippet useade "Use Symfony AccessDeniedHttpException" b
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
endsnippet

snippet usebre "Use Symfony BadRequestHttpException" b
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
endsnippet

snippet useenfe "Use Doctrine EntityNotFoundException" b
use Doctrine\ORM\EntityNotFoundException;${0}
endsnippet

snippet usetrans "Use TranslatorInterface" b
use Symfony\Contracts\Translation\TranslatorInterface;${0}
endsnippet

snippet usetest "Use a bunch of useful test related classes" b
use PHPUnit\Framework\TestCase;
use PHPUnit\Framework\Attributes\DataProvider;
use PHPUnit\Framework\MockObject\MockObject;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\Console\Tester\CommandTester;${0}
endsnippet

snippet m "Create a new method" b
${1:public} function ${2}(${3}): ${4}
{
    ${0}
}
endsnippet

snippet for "for ($i = 0; $i < $count; ++$i) { ... }" b
for ($${1:i} = 0; $$1 < ${2:count}; ++$$1) {
    ${0}
}
endsnippet

snippet dst "declare strict types" b
declare(strict_types=1);${0}
endsnippet

snippet phpstani "Phpstan ignore" b
/* @phpstan-ignore ${0} */
endsnippet

snippet phpstaninl "Phpstan ignore next line" b
/* @phpstan-ignore-next-line */${0}
endsnippet
